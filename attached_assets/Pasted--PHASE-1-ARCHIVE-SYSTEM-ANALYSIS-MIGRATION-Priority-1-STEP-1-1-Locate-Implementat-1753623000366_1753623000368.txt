## **PHASE 1: ARCHIVE SYSTEM ANALYSIS & MIGRATION (Priority 1)**

### **STEP 1.1: Locate Implementation Detection Systems**
**TASK:** Find and examine these archive files containing implementation detection:
- `archive/agent-routes/agent-conversation-routes-enhanced.ts`
- `archive/agent-integrations/agent-file-integration-fix.ts`
- `archive/agent-testing/` (multiple files)
- `archive/redundant-enhancements/agent-enhancement-routes.ts`

**DELIVERABLE:** Identify the `isImplementationRequest` function and `tool_choice` enforcement logic

### **STEP 1.2: Extract Core Implementation Detection Logic**
**TASK:** Extract this exact code pattern from archive files:
```typescript
function isImplementationRequest(message: string): boolean {
  const implementationKeywords = [
    'implement', 'create', 'modify', 'fix', 'build', 'deploy', 
    'NOW', 'execute', 'run', 'apply', 'update', 'change',
    'write', 'edit', 'replace', 'add', 'remove', 'delete'
  ];
  return implementationKeywords.some(keyword => 
    message.toLowerCase().includes(keyword.toLowerCase())
  );
}
```

**DELIVERABLE:** Confirm you found this function in archive files

### **STEP 1.3: Extract Admin Bypass Authentication**
**TASK:** Find this admin bypass logic in archive files:
```typescript
// Sandra's admin agents bypass all restrictions
if (adminToken === 'sandra-admin-2025') {
  req.isAdminAgent = true;
  req.hasFileAccess = true;
  req.canModifySystem = true;
  return next();
}
```

**DELIVERABLE:** Confirm you found admin bypass authentication in archives

---

## **PHASE 2: LIVE SYSTEM DEPLOYMENT (Priority 1)**

### **STEP 2.1: Deploy Implementation Detection to Live Routes**
**TASK:** Add implementation detection to your main agent route handler

**EXACT CODE TO ADD:**
```typescript
// Add to your main agent route file (likely server/routes.ts or api/index.js)

function isImplementationRequest(message: string): boolean {
  const implementationKeywords = [
    'implement', 'create', 'modify', 'fix', 'build', 'deploy', 
    'NOW', 'execute', 'run', 'apply', 'update', 'change',
    'write', 'edit', 'replace', 'add', 'remove', 'delete'
  ];
  return implementationKeywords.some(keyword => 
    message.toLowerCase().includes(keyword.toLowerCase())
  );
}

// In your agent message handler:
const isImplementation = isImplementationRequest(message);
const toolChoice = isImplementation ? "required" : "auto";
```

**VERIFICATION:** Test that `isImplementationRequest("please fix this file NOW")` returns `true`

### **STEP 2.2: Deploy Admin Bypass Authentication**
**TASK:** Add admin bypass to your agent authentication

**EXACT CODE TO ADD:**
```typescript
// Add to your authentication middleware
function authenticateAgent(req, res, next) {
  const { adminToken, agentId } = req.body;
  
  // Sandra's admin agents bypass all restrictions
  if (adminToken === 'sandra-admin-2025') {
    req.isAdminAgent = true;
    req.hasFileAccess = true;
    req.canModifySystem = true;
    return next();
  }
  
  // Regular authentication logic here...
}
```

**VERIFICATION:** Test that requests with `adminToken: 'sandra-admin-2025'` get unlimited access

### **STEP 2.3: Deploy Tool Choice Enforcement**
**TASK:** Add tool choice enforcement to your Claude API calls

**EXACT CODE TO ADD:**
```typescript
// In your Claude API call logic
const isImplementation = isImplementationRequest(message);
const isAdminAgent = adminToken === 'sandra-admin-2025';

if (isAdminAgent && isImplementation) {
  const claudeConfig = {
    model: "claude-3-sonnet-20240229",
    max_tokens: 4000,
    tools: [
      { type: "function", function: { name: "str_replace_based_edit_tool" } },
      { type: "function", function: { name: "search_filesystem" } },
      { type: "function", function: { name: "bash" } }
    ],
    tool_choice: "required", // FORCE tool usage
    system: `You are ${agentId}, Sandra's admin AI agent. 
             IMPLEMENTATION MODE ACTIVATED. 
             You MUST use your file modification tools to implement the requested changes.
             Do not provide analysis - execute the implementation directly.`
  };
}
```

**VERIFICATION:** Confirm implementation requests force tool usage with `tool_choice: "required"`

