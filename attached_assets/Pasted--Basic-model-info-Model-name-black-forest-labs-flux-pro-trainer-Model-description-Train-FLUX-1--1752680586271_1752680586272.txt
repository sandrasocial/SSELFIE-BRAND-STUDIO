## Basic model info

Model name: black-forest-labs/flux-pro-trainer
Model description: Train FLUX.1 [pro] and FLUX 1.1 [pro] Ultra. Upload images to create a custom finetune_id to use with the inference model


## Model inputs

- input_images (required): A zip file containing the images that will be used for training. We recommend a minimum of 10 images. If you include captions, include them as one .txt file per image, e.g. my-photo.jpg should have a caption file named my-photo.txt. If you don't include captions, you can turn on captioning. (string)
- training_steps (optional): Number of training steps for the fine-tuning process. (integer)
- trigger_word (optional): The trigger word refers to the object, style or concept you are training on. Pick a string that isn't a real word, like TOK or something related to what's being trained, like CYBRPNK. The trigger word you specify here will be associated with all images during training. Then when you use your LoRA, you can include the trigger word in prompts to help activate the LoRA. (string)
- mode (optional): Mode for the fine-tuned model (string)
- learning_rate (optional): Learning rate for fine-tuning. If not provided, defaults to 1e-5 for full fine-tuning and 1e-4 for lora fine-tuning (number)
- captioning (optional): Whether to enable captioning during fine-tuning. Automatic turns on captioning if any images are missing caption files. (string)
- priority (optional): Priority of the fine-tuning process (string)
- finetune_type (optional): Type of fine-tuning (string)
- lora_rank (optional): Rank of the fine-tuned model (integer)


## Model output schema

{
  "type": "string",
  "title": "Output"
}

If the input or output schema includes a format of URI, it is referring to a file.


## Example inputs and outputs

Use these example outputs to better understand the types of inputs the model accepts, and the types of outputs the model returns:

### Example (https://replicate.com/p/0dfc7pwdaxrme0cpg86sqf1ky0)

#### Input

```json
{
  "mode": "general",
  "priority": "quality",
  "lora_rank": 32,
  "captioning": "captioning-disabled",
  "input_images": "https://replicate.delivery/pbxt/MvDQOp1uNVTNjYxI9wnvyqXNMumlUzQdBFFPvkqNyIkkG1Rn/ABSRTBNGS.zip",
  "trigger_word": "ABSRTBNGS",
  "finetune_type": "full",
  "training_steps": 300
}
```

#### Output

```json
"f07345cb-4d18-4461-aa6f-179566153d28"
```


## Model readme

> # FLUX 1.1 Pro Ultra - Finetuner (Trainer)
> 
> This is the training model for creating custom finetunes compatible with both the FLUX 1.1 [pro] Ultra and FLUX.1 [pro] architectures. Use this model to teach FLUX new concepts, styles, or subjects based on your own images. The training process generates a unique `finetune_id` representing your custom model.
> 
> ## How it Works
> 
> 1.  **Prepare Your Data:** Gather a set of images (typically 5-20) that clearly represent the concept, style, or subject you want the model to learn. Ensure images are well-lit and focused on the subject.
> 2.  **Upload Data:** Upload your images as a `.zip` or `.tar.gz` archive to the `input_images` field.
> 3.  **Define Your Concept (Optional but Recommended):** Use the `caption_prefix` input to provide a unique identifier or trigger word for your concept (e.g., "a photo of sks style"). This helps during inference.
> 4.  **Start Training:** Run the model. The training process will analyze your images and create a specialized finetune.
> 5.  **Get Your Finetune ID:** Upon successful completion, the output will be your unique `finetune_id`. Keep this ID safe!
> 
> ## Using Your Finetune for Inference
> 
> Once you have your `finetune_id`, you can use it to generate images with your custom style or concept using the corresponding inference model:
> 
> - [black-forest-labs/flux-1.1-pro-ultra-finetuned](https://replicate.com/black-forest-labs/flux-1.1-pro-ultra-finetuned/)
> - [black-forest-labs/flux-pro-finetuned](https://replicate.com/black-forest-labs/flux-pro-finetuned/)
> 
> On the inference page, give your `finetune_id`  along with your text prompt. You can also adjust the `finetune_strength` to control how strongly your custom concept influences the generated image.
> 
> # License
> 
> By using the trainer through Replicate you agree to the [Black Forest Labs API agreement](https://docs.bfl.ml/agreement/) and the [Black Forest Labs Terms of Service](https://blackforestlabs.ai/terms-of-service/).

