2. CONVERSATION CONTEXT LOSS ISSUES
Database Schema Conflicts:

claudeConversations.conversationId (varchar, unique string identifier)
claudeMessages.conversationId (integer, references claude_conversations.id)
Problem: Frontend sends string IDs, but messages table expects numeric foreign keys
Multiple sendMessage Implementations:

claude-api-service.ts - Main implementation
Multiple route handlers calling sendMessage differently
No consistent conversation ID handling across endpoints
3. COMPETING ENDPOINT ROUTING CHAOS
Conflicting Agent Endpoints:

/api/admin/agent-chat - Original admin endpoint
/api/admin/agent-chat-bypass - "Implementation-aware" endpoint
/api/admin/consulting-chat - Redirects to agent-chat-bypass
Multiple specialized routes (maya-ai-routes, agent-conversation-routes, etc.)
Routing Confusion:

consulting-agents-routes.ts redirects consulting requests to agent-chat-bypass
Frontend sometimes uses direct endpoints, sometimes goes through redirects
Authentication token validation inconsistent across endpoints
4. MEMORY/CONTEXT PERSISTENCE FAILURES
Agent Memory System Issues:

Advanced memory system loading correctly (4 patterns found for Zara)
BUT conversation history not properly linked between sessions
getConversationHistory() function working but conversation IDs not properly maintained
Elena "forgets" because each new request creates new conversation contexts
5. AUTHENTICATION & USER ID CONFUSION
Critical Bug in Parameter Passing:

System has detection for userId being passed as system prompt instead of actual user ID
Bug detection code: if (userId.includes('You are') || userId.includes('COMMUNICATION RULES'))
This suggests parameter order confusion in calling functions
6. WORKFLOW EXECUTION RETRY LOOPS
Elena's Retry Issues:

Agent gets "stuck in retry loops" due to endpoint routing conflicts
Multiple competing endpoints causing execution failures
Workflow failures trigger retries that hit different endpoints each time
7. DATABASE CONNECTION INEFFICIENCIES
Conversation Creation Issues:

Every agent interaction potentially creates new conversations instead of reusing existing ones
createConversationIfNotExists() logic may not be properly matching existing conversations
Message count tracking inconsistent
