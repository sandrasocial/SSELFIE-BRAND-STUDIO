## **ðŸ”’ CORE PRINCIPLES (IMMUTABLE)**

### **1. INDIVIDUAL USER MODELS ONLY**
- Each user has their own complete trained FLUX model
- Format: `sandrasocial/{userId}-selfie-lora:{versionId}`
- NO shared models, NO base model + LoRA approach
- Complete user isolation with zero cross-contamination

### **2. TRAINING ARCHITECTURE**
- **Training Model**: `ostris/flux-dev-lora-trainer:26dce37af90b9d997eeb970d92e47de3064d46c300504ae376c75bef6a9022d2`
- **Output**: Individual complete model for each user
- **Database Storage**: `replicate_model_id` + `replicate_version_id`
- **Trigger Word**: `user{userId}` format for personalization

### **3. GENERATION ARCHITECTURE**
- **API Format**: `version: "sandrasocial/{userId}-selfie-lora:{versionId}"`
- **Parameters**: 
 * guidance: 2.8Â 
* num_inference_steps: 40
* lora_scale: 0.95Â 
* output_quality: 95Â 
  - `go_fast: false` (quality over speed)
  - `aspect_ratio: "3:4"` (portrait format)
  - `num_outputs: 3` (variety for selection)

---

## **ðŸ”’ TECHNICAL IMPLEMENTATION (LOCKED)**

### **SERVER FILES**
1. **server/ai-service.ts** (Maya AI Generation)
2. **server/image-generation-service.ts** (AI Photoshoot)
3. **server/model-training-service.ts** (Training Management)

### **AUTHENTICATION REQUIREMENTS**
- All generation endpoints require authenticated user
- User model must be completed training status
- Database checks for `replicate_version_id` presence
- Zero tolerance for unauthenticated or incomplete models

### **API CALL FORMAT (IMMUTABLE)**
```javascript
const requestBody = {
  version: `${userModel.replicateModelId}:${userModel.replicateVersionId}`,
  input: {
    prompt: userPrompt,
    guidance: 2.8,
    num_inference_steps: 40,
    num_outputs: 3,
    aspect_ratio: "3:4",
    output_format: "png",
    output_quality: 95,
    go_fast: false,
    disable_safety_checker: false,
    seed: Math.floor(Math.random() * 1000000)
  }
};
```

---

## **ðŸ”’ ZERO TOLERANCE POLICY (PERMANENT)**

### **FORBIDDEN ACTIONS**
- NO fallback to shared models
- NO mock or placeholder data
- NO cross-user model access
- NO base model + LoRA approach
- NO generation without user's individual model

### **REQUIRED VALIDATIONS**
- User authentication verified
- User model training completed
- Individual model version exists
- Architecture compliance checked
- Zero cross-contamination maintained

### **ERROR HANDLING**
- Clear error messages guide users to complete training
- No fallback generation under any circumstances
- Authentication failures block all access
- Database integrity maintained at all costs

---

## **ðŸ”’ DEPLOYMENT REQUIREMENTS (LOCKED)**

### **ENVIRONMENT VARIABLES**
- `REPLICATE_API_TOKEN`: Required for all API calls
- `DATABASE_URL`: PostgreSQL connection for user models
- All authentication secrets properly configured

### **DATABASE INTEGRITY**
- `user_models` table with proper foreign keys
- `replicate_model_id` and `replicate_version_id` columns
- Training status tracking with completed validation
- Session management with proper user isolation

### **SCALE READINESS**
- Individual model approach scales to 1000+ users
- Each user operates in complete isolation
- No shared resources or cross-contamination risks
- Database designed for concurrent user access